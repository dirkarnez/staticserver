name: golang-build-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      targetZip: ${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.os }}.zip
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "2.0.0"
          
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.17.5' # The Go version to download (if necessary) and use.
          
      - run: go get .
      
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        run: GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build
        
      - if: ${{ matrix.os != 'ubuntu-latest' }}
        run: go build

      - run: openssl req -new -newkey rsa:2048 -days 365 -nodes -x509 -subj '/CN=localhost' -keyout server.key -out server.crt
        
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          path: |
            staticserver*
            server.key
            server.crt
          filename: "${{ env.targetZip }}"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.targetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
